Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  filtro.asm  Page 1



1                          ;***************************************************************************
2      
1105   
1106                       ;******************************************************************************
1107   
1108                                 OPT     CEX                               ;Expand DC
1109   
1110      000400           BUFSIZE   equ     1024
1111   
1112      000000           Left_ch   equ     0
1113   
1114   
1115      000300           CTRL_WD_12 equ    MIN_LEFT_ATTN+MIN_RIGHT_ATTN+LIN2+RIN2
1116      000000           CTRL_WD_34 equ    MIN_LEFT_GAIN+MIN_RIGHT_GAIN
1117   
1118                       ;===========================================================
1119   
1120   
1121   
1122      00FFFF           datin     equ     $ffff                             ;location in Y memory of input file
1123      00FFFE           datout    equ     $fffe                             ;location in Y memory of output file
1124   
1125   
1126   
1127   
1128                       ;========data===========================
1129   
1130      X:000000                   org     x:0
1131   
1132   
1133   
1134      X:000000         inbuf     dsm     BUFSIZE                           ;buffer de entrada
1135      000400           endinbuf  equ     *
1136      X:000400         bits      ds      1
1137 d    X:000401 7FF7CF  decay     dc      0.99975
1138 d    X:000402 004189  envt      dc      0.002
1139 d    X:000403 0013A9  denvt     dc      0.0006
1140 d    X:000404 0013A9  endt      dc      0.0006
1141 d    X:000405 00624E  mint      dc      0.003
1142      Y:000000                   org     y:0
1143      Y:000000         outbuf    dsm     BUFSIZE                           ;buffer de salida
1144      000400           endoutbuf equ     *
1145   
1146      Y:000400         env1      ds      1
1147      Y:000401         env2      ds      1
1148      Y:000402         denv      ds      1
1149      Y:000403         lastmin   ds      1
1150      Y:000404         ignore    ds      1
1151      Y:000405         innote    ds      1
1152   
1153   
1154      P:000100                   org     p:$100
1155                       START
1156                       main
1157      P:000100 08F4BD            movep             #$040007,x:M_PCTL       ; PLL 8 X 12.288 = 98.304MHz
                   040007
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  filtro.asm  Page 2



1158      P:000102 0003F8            ori     #3,mr                             ; mask interrupts
1159      P:000103 0500BB            movec             #0,sp                   ; clear hardware stack pointer
1160      P:000104 0500BA            move              #0,omr                  ; operating mode 0
1161   
1162                       ;==================
1163   
1164      P:000105 240000            move              #0,X0
1165      P:000106 447000            move              X0,x:bits
                   000400
1166   
1167   
1168   
1169      P:000108 300000  inifil    move              #inbuf,r0               ;point to input buffer
1170      P:000109 05F420            move              #BUFSIZE-1,m0           ;mod(BUFSIZE)
                   0003FF
1171      P:00010B 310000            move              #inbuf,r1
1172      P:00010C 05F421            move              #BUFSIZE-1,m1           ;mod(BUFSIZE) (puntero para bloques)
                   0003FF
1173      P:00010E 340000            move              #outbuf,r4              ;point to output buffer
1174      P:00010F 05F424            move              #BUFSIZE-1,m4           ;mod(BUFSIZE)
                   0003FF
1175   
1176      P:000111 46F400            move              #0.999,y0
                   7FDF3B
1177      P:000113 4E7000            move                          y0,y:lastmin
                   000403
1178      P:000115 240000            move              #0,x0
1179      P:000116 4C7000            move                          x0,y:ignore
                   000404
1180      P:000118 4C7000            move                          x0,y:env1
                   000400
1181      P:00011A 4C7000            move                          x0,y:env2
                   000401
1182                       ;========================================
1183   
1184   
1185                       ;=====================================
1186                       ;      Inicializo port b for test
1187                       ;=====================================
1188   
1189      P:00011C 08F484            movep             #$0001,X:M_HPCR         ;Port B I/O mode select
                   000001
1190      P:00011E 08F488            movep             #$0001,X:M_HDDR         ;PB0 out
                   000001
1191   
1192   
1193   
1194                       ;========================================
1195   
1196      P:000120 0BF080            jsr     ada_init                          ;initialize codec
                   000123
1197   
1198                       ;ACA VA EL PITCH DETECT, MOTHERFUCKERS
1199      P:000122 0C0122            jmp     *                                 ;take a nap
1200   
1201                                 include 'ada_init.asm'                    ;used to include codec initialization routines
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 3



1202                                 page    132,60
1203                       ;**************************************************************************
1204                       ;       ADA_INIT.ASM    Ver 1.2
1205                       ;       Example program to initialize the CS4218
1206                       ;
1207                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1208                       ;                     Semiconductor Products Sector
1209                       ;                     Wireless Signal Processing Division
1210                       ;
1211                       ;       History:
1212                       ;                       14 June 1996:  RLR/LJD - ver 1.0
1213                       ;                       21 July 1997:  BEA     - ver 1.1
1214                       ;                       23 Sept 1998:  TTL     - ver 1.2
1215                       ;**************************************************************************
1216   
1217      0003E8           N_IGNORE  equ     1000
1218      X:000406                   org     x:
1219   
1220                       ; Codec control constants
1221      X:000406         CTRL_WD_HI ds     1
1222      X:000407         CTRL_WD_LO ds     1
1223   
1224   
1225                       ; GPIO  pin constants
1226   
1227                                                                           ; ESSI0 - audio data GPIO mode
1228                                                                           ; DSP                   CODEC
1229                                                                           ; ---------------------------
1230                       CODEC_RESET
1231      000000                     equ     0                                 ; bit0  SC00    --->    CODEC_RESET~
1232   
1233                                                                           ; ESSI1 - control data GPIO Mode
1234                                                                           ; DSP                   CODEC
1235                                                                           ;----------------------------
1236      000000           CCS       equ     0                                 ; bit0  SC10    --->    CCS~
1237      000001           CCLK      equ     1                                 ; bit1  SC11    --->    CCLK
1238      000002           CDIN      equ     2                                 ; bit2  SC12    --->    CDIN
1239   
1240                       ;**************************************************************************
1241                       ; Initialize the CS4218 codec
1242                       ; ---------------------------
1243                       ; Serial Mode 4 (SM4), DSP Slave/Codec Master, 32-bits per frame
1244                       ;
1245                       ; After a reset, the control port must be written once to initialize it
1246                       ; if the port will be accessed to read or write control bits.  The initial
1247                       ; write is a "dummy" write since the data is ignored by the codec.  A second
1248                       ; write is needed to configure the codec as desired.  Then, the control port
1249                       ; only needs to be written to when a change is desired, or to obtain status
1250                       ; information.
1251                       ;
1252                       ; Although only 23 bits contain useful data in CDIN, a minimum of 31 bits
1253                       ; must be written.
1254                       ;
1255                       ; CDIN
1256                       ;------------------------------------------------
1257                       ; bit 31                0
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 4



1258                       ;------------------------------------------------
1259                       ; bit 30                mask interrupt
1260                       ;                       0=no mask on MF5:\INT pin
1261                       ;                       1=mask on MF5:\INT pin
1262                       ;------------------------------------------------
1263                       ; bit 29                DO1
1264                       ;------------------------------------------------
1265                       ; bits 28-24            left output D/A sttenuation  (1.5dB steps)
1266                       ;                       00000=No attenuation 0dB
1267                       ;                       11111=Max attenuation -46.5dB
1268                       ;------------------------------------------------
1269                       ; bits 23-19            right output D/A attenuation (1.5dB steps)
1270                       ;                       00000=No attenuation 0dB
1271                       ;                       11111=Max attenuation -46.5dB
1272                       ;------------------------------------------------
1273                       ; bit 18                mute D/A outputs
1274                       ;                       0=outputs ON
1275                       ;                       1=outputs MUTED
1276                       ;------------------------------------------------
1277                       ; bit 17                input mux, left select
1278                       ;                       0=RIN1
1279                       ;                       1=RIN2 (used on EVM)
1280                       ;------------------------------------------------
1281                       ; bit 16                input mux, right select
1282                       ;                       0=LIN1
1283                       ;                       1=LIN2 (used on EVM)
1284                       ;------------------------------------------------
1285                       ; bits 15-12            left input A/D gain (1.5dB steps)
1286                       ;                       0000=No gain 0dB
1287                       ;                       1111=Max gain +22.5dB
1288                       ;------------------------------------------------
1289                       ; bits 11-8             right input A/D gain (1.5dB steps)
1290                       ;                       0000=No gain 0dB
1291                       ;                       1111=Max gain +22.5dB
1292                       ;------------------------------------------------
1293                       ; bits 7-0              00000000
1294                       ;------------------------------------------------
1295                       ;**************************************************************************
1296   
1297   
1298      P:000123                   org     p:
1299                       ada_init
1300   
1301                                                                           ; reset ESSI ports
1302      P:000123 07F43F            movep             #$0000,x:M_PCRC         ; reset ESSI0 port
                   000000
1303      P:000125 07F42F            movep             #$0000,x:M_PCRD         ; reset ESSI1 port
                   000000
1304   
1305                                                                           ; Set Control Register A and B
1306      P:000127 07F435            movep             #$101807,x:M_CRA0       ; 12.288MHz/16 = 768KHz SCLK
                   101807
1307                                                                           ; prescale modulus = 8
1308                                                                           ; frame rate divider = 2
1309                                                                           ; 16-bits per word
1310                                                                           ; 32-bits per frame
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 5



1311                                                                           ; 16-bit data aligned to bit 23
1312   
1313      P:000129 07F436            movep             #$ff330c,x:M_CRB0       ; Enable REIE,TEIE,RLIE,TLIE,
                   FF330C
1314                                                                           ; RIE,TIE,RE,TE0
1315                                                                           ; network mode, synchronous,
1316                                                                           ; out on rising/in on falling
1317                                                                           ; shift MSB first
1318                                                                           ; external clock source drives SCK
1319                                                                           ; (codec is master)
1320                                                                           ; RX frame sync pulses active for
1321                                                                           ; 1 bit clock immediately before
1322                                                                           ; transfer period
1323                                                                           ; positive frame sync polarity
1324                                                                           ; frame sync length is 1-bit
1325   
1326                                                                           ; Configure GPIO pins -- (functionality and direction
)
1327      P:00012B 07F43F            movep             #$0000,x:M_PCRC         ; Enable GPIO pin 0 SC00=CODEC_RESET
                   000000
1328      P:00012D 07F42F            movep             #$0000,x:M_PCRD         ; Enable GPIO CSS (pin 0),CCLK (pin 1), CDIN (pin 2)
                   000000
1329   
1330      P:00012F 07F43E            movep             #$0001,x:M_PRRC         ; set PC0=CODEC_RESET~ as output
                   000001
1331      P:000131 07F42E            movep             #$0007,x:M_PRRD         ; set PD0=CCS~ as output
                   000007
1332                                                                           ; set PD1=CCLK as output
1333                                                                           ; set PD2=CDIN as output
1334   
1335                       ; Codec Reset
1336      P:000133 013D00            bclr    #CODEC_RESET,x:M_PDRC             ; assert CODEC_RESET~
1337      P:000134 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS~ -- allows control register to be writte
n to
1338   
1339                                                                           ; Delay to allow Codec to reset
1340      P:000135 06E883            do      #1000,_delay_loop
                   000138
1341      P:000137 06E8A3            rep     #1000                             ; minimum 50 ms delay
1342      P:000138 000000            nop
1343                       _delay_loop
1344   
1345   
1346                       ; Setting up to send Codec control information
1347      P:000139 013D20            bset    #CODEC_RESET,x:M_PDRC             ; deassert CODEC_RESET~
1348   
1349   
1350                                                                           ; Sending control words
1351                       set_control
1352      P:00013A 44F400            move              #CTRL_WD_12,x0          ; transfer control value to control variable
                   000300
1353      P:00013C 447000            move              x0,x:CTRL_WD_HI
                   000406
1354      P:00013E 240000            move              #CTRL_WD_34,x0
1355      P:00013F 447000            move              x0,x:CTRL_WD_LO
                   000407
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 6



1356      P:000141 0BF080            jsr     codec_control                     ; send in dummy control information
                   00014B
1357      P:000143 0BF080            jsr     codec_control                     ; send in correct control information
                   00014B
1358   
1359   
1360                                                                           ; Set and enable interrupts
1361      P:000145 08F4BE            movep             #$000c,x:M_IPRP         ; set interrupt priority level for ESSI0 to 3
                   00000C
1362      P:000147 00FCB8            andi    #$fc,mr                           ; enable interrupts
1363   
1364                                                                           ; Set ESSI functionality
1365      P:000148 07F43F            movep             #$003e,x:M_PCRC         ; enable ESSI0 except SC00=CODEC_RESET
                   00003E
1366   
1367      P:00014A 00000C            rts
1368   
1369   
1370                       ;-------------------------------------------------------------
1371                       ; codec_control routine
1372                       ;       Input:  CTRL_WD_LO and CTRL_WD_HI
1373                       ;       Output: CDIN
1374                       ;       Description: Used to send control information to CODEC
1375                       ;       NOTE: does not preserve the 'a' register.
1376                       ;-------------------------------------------------------------
1377                       codec_control
1378      P:00014B 200013            clr     a
1379      P:00014C 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS
1380      P:00014D 54F000            move              x:CTRL_WD_HI,a1         ; upper 16 bits of control data
                   000406
1381      P:00014F 0BF080            jsr     send_codec                        ; shift out upper control word
                   000157
1382      P:000151 54F000            move              x:CTRL_WD_LO,a1         ; lower 16 bits of control data
                   000407
1383      P:000153 0BF080            jsr     send_codec                        ; shift out lower control word
                   000157
1384      P:000155 012D20            bset    #CCS,x:M_PDRD                     ; deassert CCS
1385      P:000156 00000C            rts
1386   
1387   
1388                       ;---------------------------------------------------------------
1389                       ; send_codec routine
1390                       ;       Input:  a1 containing control information
1391                       ;       Output: sends bits to CDIN
1392                       ;       Description: Determines bits to send to CDIN
1393                       ;---------------------------------------------------------------
1394   
1395                       send_codec
1396      P:000157 061080            do      #16,end_send_codec                ; 16 bits per word
                   000163
1397      P:000159 012D21            bset    #CCLK,x:M_PDRD                    ; toggle CCLK clock high
1398      P:00015A 0ACC17            jclr    #23,a1,bit_low                    ; test msb
                   00015F
1399      P:00015C 012D22            bset    #CDIN,x:M_PDRD                    ; send high into CDIN
1400      P:00015D 0AF080            jmp     continue
                   000160
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 7



1401                       bit_low
1402      P:00015F 012D02            bclr    #CDIN,x:M_PDRD                    ; send low into CDIN
1403                       continue
1404      P:000160 0602A0            rep     #2                                ; delay
1405      P:000161 000000            nop
1406      P:000162 012D01            bclr    #CCLK,x:M_PDRD                    ; restart cycle
1407      P:000163 200033            lsl     a                                 ; shift control word to 1 bit
1408                                                                           ; to left
1409                       end_send_codec
1410      P:000164 00000C            rts
1411   
1412   
1413   
1414   
1415                       ;****************************************************************************
1416                       ;       SSI0_ISR.ASM    Ver.2.0
1417                       ;       Example program to handle interrupts through
1418                       ;       the 56307 SSI0 to move audio through the CS4218
1419                       ;
1420                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1421                       ;                     Semiconductor Products Sector
1422                       ;                     Digital Signal Processing Division
1423                       ;
1424                       ;
1425                       ;       History:
1426                       ;                       14 June 1996: RLR/LJD - ver 1.0
1427                       ;                       23 July 1997: BEA     - ver 1.1
1428                       ;                       1  june 2001: Dany
1429                       ;******************************************************************************
1430   
1431   
1432                       ;----the actual interrupt service routines (ISRs)  follow:
1433   
1434                       ;************************ SSI TRANSMIT ISR *********************************
1435                       ssi_txe_isr
1436      P:000165 013704            bclr    #4,x:M_SSISR0                     ; Read SSISR to clear exception flag
1437                                                                           ; explicitly clears underrun flag
1438                       ssi_tx_isr
1439   
1440      P:000166 000004            rti
1441   
1442   
1443   
1444                       ;********************* SSI TRANSMIT LAST SLOT ISR **************************
1445                       ssi_txls_isr
1446      P:000167 0A7020            bset    #Left_ch,x:bits
                   000400
1447      P:000169 000004            rti
1448   
1449                       ;************************** SSI receive ISR ********************************
1450                       ssi_rxe_isr
1451      P:00016A 013705            bclr    #5,x:M_SSISR0                     ; Read SSISR to clear exception flag
1452                                                                           ; explicitly clears overrun flag
1453                       ssi_rx_isr
1454   
1455      P:00016B 0444D8            movep             x:M_RX0,x0              ; Read a/d data
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 8



1456      P:00016C 46F000            move              X:bits,y0
                   000400
1457      P:00016E 0AC620            jset    #Left_ch,y0,esright
                   0001D1
1458   
1459                       ;ONSET DETECTION
1460   
1461      P:000170 208E00            move              x0,a
1462   
1463      P:000171 445826            abs     a         x0,x:(r0)+              ;guardo la muestra en inbuf, y calculo el abs(x(n))
1464   
1465      P:000172 5FF000            move                          y:env1,b
                   000400
1466      P:000174 200005            cmp     b,a                               ; abs(x(n))>=env(n-1)?
1467   
1468      P:000175 0D1041            bge     envge
                   000006
1469      P:000177 44F000            move              x:decay,x0              ;si x<env, hago que env decaiga
                   000401
1470      P:000179 21E600            move              b,y0
1471      P:00017A 2000D0            mpy     x0,y0,a                           ;env*decay->env
1472   
1473      P:00017B 5F7000  envge     move                          b,y:env2    ; env(n-1)->env2
                   000401
1474      P:00017D 5E7000            move                          a,y:env1    ; env(n)->env1
                   000400
1475   
1476   
1477      P:00017F 5FF000            move                          y:ignore,b
                   000404
1478      P:000181 20000B            tst     b
1479      P:000182 0D1042            bne     ignoring
                   000033
1480   
1481      P:000184 5FF000            move                          y:env2,b
                   000401
1482      P:000186 200005            cmp     b,a
1483      P:000187 0D1049            blt     nodecrece
                   000009
1484   
1485   
1486      P:000189 5FF000            move                          y:lastmin,b
                   000403
1487      P:00018B 200005            cmp     b,a
1488      P:00018C 029008            tlt     a,b
1489      P:00018D 000000            nop
1490   
1491      P:00018E 5F7000            move                          b,y:lastmin
                   000403
1492      P:000190 4EF000  nodecrece move                          y:innote,y0
                   000405
1493      P:000192 5FF000            move                          y:env2,b
                   000401
1494      P:000194 57F014            sub     b,a       x:denvt,b
                   000403
1495      P:000196 57F005            cmp     b,a       x:envt,b
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 9



                   000402
1496      P:000198 0D1049            blt     noonset
                   000023
1497      P:00019A 0CC6A1            brset   #1,y0,yesonset
                   00000D
1498      P:00019C 5EF000            move                          y:env1,a
                   000400
1499      P:00019E 5FF005            cmp     b,a                   y:lastmin,b
                   000403
1500      P:0001A0 0D1049            blt     noonset
                   00001B
1501      P:0001A2 57F014            sub     b,a       x:mint,b
                   000405
1502      P:0001A4 200005            cmp     b,a
1503      P:0001A5 0D1049            blt     noonset
                   000016
1504   
1505      P:0001A7 0A7061  yesonset  bset    #1,y:innote
                   000405
1506      P:0001A9 56F400            move              #0.999,a
                   7FDF3B
1507      P:0001AB 5E7000            move                          a,y:lastmin
                   000403
1508      P:0001AD 56F400            move              #N_IGNORE,a
                   0003E8
1509      P:0001AF 5E7000            move                          a,y:ignore
                   000404
1510      P:0001B1 56F400            move              #0.999,a
                   7FDF3B
1511      P:0001B3 0AF080            jmp     finiupi
                   0001CE
1512   
1513      P:0001B5 00000B  ignoring  dec     b
1514      P:0001B6 000000            nop
1515      P:0001B7 5F7000            move                          b,y:ignore
                   000404
1516      P:0001B9 0D10C0            bra     noend
                   000013
1517      P:0001BB 4EF000  noonset   move                          y:innote,y0
                   000405
1518      P:0001BD 0CC681            brclr   #1,y0,noend
                   00000F
1519      P:0001BF 5EF000            move                          y:env1,a
                   000400
1520      P:0001C1 57F000            move              x:endt,b
                   000404
1521      P:0001C3 200005            cmp     b,a
1522      P:0001C4 0D1041            bge     noend
                   000008
1523      P:0001C6 0A7041  endnote   bclr    #1,y:innote
                   000405
1524      P:0001C8 46F400            move              #0.999,y0
                   7FDF3B
1525      P:0001CA 4E7000            move                          y0,y:lastmin
                   000403
1526      P:0001CC 2E0000  noend     move              #0,a
Motorola DSP56300 Assembler  Version 6.2.0   111-02-28  14:41:07  ada_init.asm  Page 10



1527      P:0001CD 000000            nop
1528   
1529   
1530                       ;FIN DE ONSET DETECTION
1531   
1532      P:0001CE 21C400  finiupi   move              a,x0
1533      P:0001CF 0AF080            jmp     endisr
                   0001D2
1534   
1535   
1536      P:0001D1 240000  esright   move              #0,x0                   ;mute the other channel
1537   
1538      P:0001D2 04C4DC  endisr    movep             x0,x:M_TX00             ; write d/a data
1539      P:0001D3 0B7000            bchg    #Left_ch,x:bits
                   000400
1540      P:0001D5 000004            rti
1541   
1542   
1543   
1544                       ;********************** SSI receive last slot ISR **************************
1545                       ssi_rxls_isr
1546   
1547   
1548      P:0001D6 000004            rti
1549   
1550                                 end

0    Errors
0    Warnings



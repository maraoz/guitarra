Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  filtro.asm  Page 1



1                          ;***************************************************************************
2      
1105   
1106                       ;******************************************************************************
1107   
1108                                 OPT     CEX                               ;Expand DC
1109   
1110      000400           BUFSIZE   equ     1024
1111   
1112      000000           Left_ch   equ     0
1113   
1114   
1115      000300           CTRL_WD_12 equ    MIN_LEFT_ATTN+MIN_RIGHT_ATTN+LIN2+RIN2
1116      000000           CTRL_WD_34 equ    MIN_LEFT_GAIN+MIN_RIGHT_GAIN
1117   
1118                       ;===========================================================
1119   
1120   
1121   
1122      00FFFF           datin     equ     $ffff                             ;location in Y memory of input file
1123      00FFFE           datout    equ     $fffe                             ;location in Y memory of output file
1124   
1125   
1126   
1127   
1128                       ;========data===========================
1129   
1130      X:000000                   org     x:0
1131   
1132   
1133   
1134      X:000000         inbuf     dsm     BUFSIZE                           ;buffer de entrada
1135      000400           endinbuf  equ     *
1136      X:000400         bits      ds      1
1137 d    X:000401 7FF7CF  decay     dc      0.99975
1138 d    X:000402 004189  envt      dc      0.002
1139 d    X:000403 0013A9  denvt     dc      0.0006
1140 d    X:000404 0013A9  endt      dc      0.0006
1141 d    X:000405 00624E  mint      dc      0.003
1142      Y:000000                   org     y:0
1143      Y:000000         outbuf    dsm     BUFSIZE                           ;buffer de salida
1144      000400           endoutbuf equ     *
1145   
1146      Y:000400         env1      ds      1
1147      Y:000401         env2      ds      1
1148      Y:000402         denv      ds      1
1149      Y:000403         lastmin   ds      1
1150      Y:000404         ignore    ds      1
1151      Y:000405         innote    ds      1
1152   
1153      P:000100                   org     p:$100
1154                       START
1155                       main
1156      P:000100 08F4BD            movep             #$040007,x:M_PCTL       ; PLL 8 X 12.288 = 98.304MHz
                   040007
1157      P:000102 0003F8            ori     #3,mr                             ; mask interrupts
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  filtro.asm  Page 2



1158      P:000103 0500BB            movec             #0,sp                   ; clear hardware stack pointer
1159      P:000104 0500BA            move              #0,omr                  ; operating mode 0
1160   
1161                       ;==================
1162   
1163      P:000105 240000            move              #0,X0
1164      P:000106 447000            move              X0,x:bits
                   000400
1165   
1166   
1167   
1168      P:000108 300000  inifil    move              #inbuf,r0               ;point to input buffer
1169      P:000109 05F420            move              #BUFSIZE-1,m0           ;mod(BUFSIZE)
                   0003FF
1170      P:00010B 310000            move              #inbuf,r1
1171      P:00010C 05F421            move              #BUFSIZE-1,m1           ;mod(BUFSIZE) (puntero para bloques)
                   0003FF
1172      P:00010E 340000            move              #outbuf,r4              ;point to output buffer
1173      P:00010F 05F424            move              #BUFSIZE-1,m4           ;mod(BUFSIZE)
                   0003FF
1174   
1175      P:000111 46F400            move              #0.999,y0
                   7FDF3B
1176      P:000113 4E7000            move                          y0,y:lastmin
                   000403
1177      P:000115 240000            move              #0,x0
1178      P:000116 4C7000            move                          x0,y:ignore
                   000404
1179      P:000118 4C7000            move                          x0,y:env1
                   000400
1180      P:00011A 4C7000            move                          x0,y:env2
                   000401
1181                       ;========================================
1182   
1183   
1184                       ;=====================================
1185                       ;      Inicializo port b for test
1186                       ;=====================================
1187   
1188      P:00011C 08F484            movep             #$0001,X:M_HPCR         ;Port B I/O mode select
                   000001
1189      P:00011E 08F488            movep             #$0001,X:M_HDDR         ;PB0 out
                   000001
1190   
1191   
1192   
1193                       ;========================================
1194   
1195      P:000120 0BF080            jsr     ada_init                          ;initialize codec
                   000123
1196   
1197                       ;ACA VA EL PITCH DETECT, MOTHERFUCKERS
1198      P:000122 0C0122            jmp     *                                 ;take a nap
1199   
1200                                 include 'ada_init.asm'                    ;used to include codec initialization routines
1201                                 page    132,60
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  ada_init.asm  Page 3



1202                       ;**************************************************************************
1203                       ;       ADA_INIT.ASM    Ver 1.2
1204                       ;       Example program to initialize the CS4218
1205                       ;
1206                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1207                       ;                     Semiconductor Products Sector
1208                       ;                     Wireless Signal Processing Division
1209                       ;
1210                       ;       History:
1211                       ;                       14 June 1996:  RLR/LJD - ver 1.0
1212                       ;                       21 July 1997:  BEA     - ver 1.1
1213                       ;                       23 Sept 1998:  TTL     - ver 1.2
1214                       ;**************************************************************************
1215   
1216      0003E8           N_IGNORE  equ     1000
1217      X:000406                   org     x:
1218   
1219                       ; Codec control constants
1220      X:000406         CTRL_WD_HI ds     1
1221      X:000407         CTRL_WD_LO ds     1
1222   
1223   
1224                       ; GPIO  pin constants
1225   
1226                                                                           ; ESSI0 - audio data GPIO mode
1227                                                                           ; DSP                   CODEC
1228                                                                           ; ---------------------------
1229                       CODEC_RESET
1230      000000                     equ     0                                 ; bit0  SC00    --->    CODEC_RESET~
1231   
1232                                                                           ; ESSI1 - control data GPIO Mode
1233                                                                           ; DSP                   CODEC
1234                                                                           ;----------------------------
1235      000000           CCS       equ     0                                 ; bit0  SC10    --->    CCS~
1236      000001           CCLK      equ     1                                 ; bit1  SC11    --->    CCLK
1237      000002           CDIN      equ     2                                 ; bit2  SC12    --->    CDIN
1238   
1239                       ;**************************************************************************
1240                       ; Initialize the CS4218 codec
1241                       ; ---------------------------
1242                       ; Serial Mode 4 (SM4), DSP Slave/Codec Master, 32-bits per frame
1243                       ;
1244                       ; After a reset, the control port must be written once to initialize it
1245                       ; if the port will be accessed to read or write control bits.  The initial
1246                       ; write is a "dummy" write since the data is ignored by the codec.  A second
1247                       ; write is needed to configure the codec as desired.  Then, the control port
1248                       ; only needs to be written to when a change is desired, or to obtain status
1249                       ; information.
1250                       ;
1251                       ; Although only 23 bits contain useful data in CDIN, a minimum of 31 bits
1252                       ; must be written.
1253                       ;
1254                       ; CDIN
1255                       ;------------------------------------------------
1256                       ; bit 31                0
1257                       ;------------------------------------------------
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  ada_init.asm  Page 4



1258                       ; bit 30                mask interrupt
1259                       ;                       0=no mask on MF5:\INT pin
1260                       ;                       1=mask on MF5:\INT pin
1261                       ;------------------------------------------------
1262                       ; bit 29                DO1
1263                       ;------------------------------------------------
1264                       ; bits 28-24            left output D/A sttenuation  (1.5dB steps)
1265                       ;                       00000=No attenuation 0dB
1266                       ;                       11111=Max attenuation -46.5dB
1267                       ;------------------------------------------------
1268                       ; bits 23-19            right output D/A attenuation (1.5dB steps)
1269                       ;                       00000=No attenuation 0dB
1270                       ;                       11111=Max attenuation -46.5dB
1271                       ;------------------------------------------------
1272                       ; bit 18                mute D/A outputs
1273                       ;                       0=outputs ON
1274                       ;                       1=outputs MUTED
1275                       ;------------------------------------------------
1276                       ; bit 17                input mux, left select
1277                       ;                       0=RIN1
1278                       ;                       1=RIN2 (used on EVM)
1279                       ;------------------------------------------------
1280                       ; bit 16                input mux, right select
1281                       ;                       0=LIN1
1282                       ;                       1=LIN2 (used on EVM)
1283                       ;------------------------------------------------
1284                       ; bits 15-12            left input A/D gain (1.5dB steps)
1285                       ;                       0000=No gain 0dB
1286                       ;                       1111=Max gain +22.5dB
1287                       ;------------------------------------------------
1288                       ; bits 11-8             right input A/D gain (1.5dB steps)
1289                       ;                       0000=No gain 0dB
1290                       ;                       1111=Max gain +22.5dB
1291                       ;------------------------------------------------
1292                       ; bits 7-0              00000000
1293                       ;------------------------------------------------
1294                       ;**************************************************************************
1295   
1296   
1297      P:000123                   org     p:
1298                       ada_init
1299   
1300                                                                           ; reset ESSI ports
1301      P:000123 07F43F            movep             #$0000,x:M_PCRC         ; reset ESSI0 port
                   000000
1302      P:000125 07F42F            movep             #$0000,x:M_PCRD         ; reset ESSI1 port
                   000000
1303   
1304                                                                           ; Set Control Register A and B
1305      P:000127 07F435            movep             #$101807,x:M_CRA0       ; 12.288MHz/16 = 768KHz SCLK
                   101807
1306                                                                           ; prescale modulus = 8
1307                                                                           ; frame rate divider = 2
1308                                                                           ; 16-bits per word
1309                                                                           ; 32-bits per frame
1310                                                                           ; 16-bit data aligned to bit 23
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  ada_init.asm  Page 5



1311   
1312      P:000129 07F436            movep             #$ff330c,x:M_CRB0       ; Enable REIE,TEIE,RLIE,TLIE,
                   FF330C
1313                                                                           ; RIE,TIE,RE,TE0
1314                                                                           ; network mode, synchronous,
1315                                                                           ; out on rising/in on falling
1316                                                                           ; shift MSB first
1317                                                                           ; external clock source drives SCK
1318                                                                           ; (codec is master)
1319                                                                           ; RX frame sync pulses active for
1320                                                                           ; 1 bit clock immediately before
1321                                                                           ; transfer period
1322                                                                           ; positive frame sync polarity
1323                                                                           ; frame sync length is 1-bit
1324   
1325                                                                           ; Configure GPIO pins -- (functionality and direction
)
1326      P:00012B 07F43F            movep             #$0000,x:M_PCRC         ; Enable GPIO pin 0 SC00=CODEC_RESET
                   000000
1327      P:00012D 07F42F            movep             #$0000,x:M_PCRD         ; Enable GPIO CSS (pin 0),CCLK (pin 1), CDIN (pin 2)
                   000000
1328   
1329      P:00012F 07F43E            movep             #$0001,x:M_PRRC         ; set PC0=CODEC_RESET~ as output
                   000001
1330      P:000131 07F42E            movep             #$0007,x:M_PRRD         ; set PD0=CCS~ as output
                   000007
1331                                                                           ; set PD1=CCLK as output
1332                                                                           ; set PD2=CDIN as output
1333   
1334                       ; Codec Reset
1335      P:000133 013D00            bclr    #CODEC_RESET,x:M_PDRC             ; assert CODEC_RESET~
1336      P:000134 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS~ -- allows control register to be writte
n to
1337   
1338                                                                           ; Delay to allow Codec to reset
1339      P:000135 06E883            do      #1000,_delay_loop
                   000138
1340      P:000137 06E8A3            rep     #1000                             ; minimum 50 ms delay
1341      P:000138 000000            nop
1342                       _delay_loop
1343   
1344   
1345                       ; Setting up to send Codec control information
1346      P:000139 013D20            bset    #CODEC_RESET,x:M_PDRC             ; deassert CODEC_RESET~
1347   
1348   
1349                                                                           ; Sending control words
1350                       set_control
1351      P:00013A 44F400            move              #CTRL_WD_12,x0          ; transfer control value to control variable
                   000300
1352      P:00013C 447000            move              x0,x:CTRL_WD_HI
                   000406
1353      P:00013E 240000            move              #CTRL_WD_34,x0
1354      P:00013F 447000            move              x0,x:CTRL_WD_LO
                   000407
1355      P:000141 0BF080            jsr     codec_control                     ; send in dummy control information
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  ada_init.asm  Page 6



                   00014B
1356      P:000143 0BF080            jsr     codec_control                     ; send in correct control information
                   00014B
1357   
1358   
1359                                                                           ; Set and enable interrupts
1360      P:000145 08F4BE            movep             #$000c,x:M_IPRP         ; set interrupt priority level for ESSI0 to 3
                   00000C
1361      P:000147 00FCB8            andi    #$fc,mr                           ; enable interrupts
1362   
1363                                                                           ; Set ESSI functionality
1364      P:000148 07F43F            movep             #$003e,x:M_PCRC         ; enable ESSI0 except SC00=CODEC_RESET
                   00003E
1365   
1366      P:00014A 00000C            rts
1367   
1368   
1369                       ;-------------------------------------------------------------
1370                       ; codec_control routine
1371                       ;       Input:  CTRL_WD_LO and CTRL_WD_HI
1372                       ;       Output: CDIN
1373                       ;       Description: Used to send control information to CODEC
1374                       ;       NOTE: does not preserve the 'a' register.
1375                       ;-------------------------------------------------------------
1376                       codec_control
1377      P:00014B 200013            clr     a
1378      P:00014C 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS
1379      P:00014D 54F000            move              x:CTRL_WD_HI,a1         ; upper 16 bits of control data
                   000406
1380      P:00014F 0BF080            jsr     send_codec                        ; shift out upper control word
                   000157
1381      P:000151 54F000            move              x:CTRL_WD_LO,a1         ; lower 16 bits of control data
                   000407
1382      P:000153 0BF080            jsr     send_codec                        ; shift out lower control word
                   000157
1383      P:000155 012D20            bset    #CCS,x:M_PDRD                     ; deassert CCS
1384      P:000156 00000C            rts
1385   
1386   
1387                       ;---------------------------------------------------------------
1388                       ; send_codec routine
1389                       ;       Input:  a1 containing control information
1390                       ;       Output: sends bits to CDIN
1391                       ;       Description: Determines bits to send to CDIN
1392                       ;---------------------------------------------------------------
1393   
1394                       send_codec
1395      P:000157 061080            do      #16,end_send_codec                ; 16 bits per word
                   000163
1396      P:000159 012D21            bset    #CCLK,x:M_PDRD                    ; toggle CCLK clock high
1397      P:00015A 0ACC17            jclr    #23,a1,bit_low                    ; test msb
                   00015F
1398      P:00015C 012D22            bset    #CDIN,x:M_PDRD                    ; send high into CDIN
1399      P:00015D 0AF080            jmp     continue
                   000160
1400                       bit_low
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  ada_init.asm  Page 7



1401      P:00015F 012D02            bclr    #CDIN,x:M_PDRD                    ; send low into CDIN
1402                       continue
1403      P:000160 0602A0            rep     #2                                ; delay
1404      P:000161 000000            nop
1405      P:000162 012D01            bclr    #CCLK,x:M_PDRD                    ; restart cycle
1406      P:000163 200033            lsl     a                                 ; shift control word to 1 bit
1407                                                                           ; to left
1408                       end_send_codec
1409      P:000164 00000C            rts
1410   
1411   
1412   
1413   
1414                       ;****************************************************************************
1415                       ;       SSI0_ISR.ASM    Ver.2.0
1416                       ;       Example program to handle interrupts through
1417                       ;       the 56307 SSI0 to move audio through the CS4218
1418                       ;
1419                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1420                       ;                     Semiconductor Products Sector
1421                       ;                     Digital Signal Processing Division
1422                       ;
1423                       ;
1424                       ;       History:
1425                       ;                       14 June 1996: RLR/LJD - ver 1.0
1426                       ;                       23 July 1997: BEA     - ver 1.1
1427                       ;                       1  june 2001: Dany
1428                       ;******************************************************************************
1429   
1430   
1431                       ;----the actual interrupt service routines (ISRs)  follow:
1432   
1433                       ;************************ SSI TRANSMIT ISR *********************************
1434                       ssi_txe_isr
1435      P:000165 013704            bclr    #4,x:M_SSISR0                     ; Read SSISR to clear exception flag
1436                                                                           ; explicitly clears underrun flag
1437                       ssi_tx_isr
1438   
1439      P:000166 000004            rti
1440   
1441   
1442   
1443                       ;********************* SSI TRANSMIT LAST SLOT ISR **************************
1444                       ssi_txls_isr
1445      P:000167 0A7020            bset    #Left_ch,x:bits
                   000400
1446      P:000169 000004            rti
1447   
1448                       ;************************** SSI receive ISR ********************************
1449                       ssi_rxe_isr
1450      P:00016A 013705            bclr    #5,x:M_SSISR0                     ; Read SSISR to clear exception flag
1451                                                                           ; explicitly clears overrun flag
1452                       ;ssi_rx_isr
1453                                 include 'receiveISR.asm'
1454                       ssi_rx_isr
1455   
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  receiveISR.asm  Page 8



1456      P:00016B 0444D8            movep             x:M_RX0,x0              ; Read a/d data
1457      P:00016C 46F000            move              X:bits,y0
                   000400
1458      P:00016E 0AC620            jset    #Left_ch,y0,esright
                   0001CE
1459   
1460                       ;ONSET DETECTION
1461   
1462      P:000170 208E00            move              x0,a
1463   
1464      P:000171 445826            abs     a         x0,x:(r0)+              ;guardo la muestra en inbuf, y calculo el abs(x(n))
1465   
1466      P:000172 5FF000            move                          y:env1,b
                   000400
1467      P:000174 200005            cmp     b,a                               ; abs(x(n))>=env(n-1)?
1468   
1469      P:000175 0D1041            bge     envge
                   000006
1470      P:000177 44F000            move              x:decay,x0              ;si x<env, hago que env decaiga
                   000401
1471      P:000179 21E600            move              b,y0
1472      P:00017A 2000D0            mpy     x0,y0,a                           ;env*decay->env
1473   
1474      P:00017B 5F7000  envge     move                          b,y:env2    ; env(n-1)->env2
                   000401
1475      P:00017D 5E7000            move                          a,y:env1    ; env(n)->env1
                   000400
1476   
1477   
1478      P:00017F 5FF000            move                          y:ignore,b
                   000404
1479      P:000181 20000B            tst     b
1480      P:000182 0D1042            bne     ignoring
                   000032
1481   
1482      P:000184 5FF000            move                          y:env2,b
                   000401
1483      P:000186 200005            cmp     b,a
1484      P:000187 0D1049            blt     nodecrece
                   000008
1485   
1486      P:000189 5FF000            move                          y:lastmin,b
                   000403
1487      P:00018B 200005            cmp     b,a
1488      P:00018C 029008            tlt     a,b
**** 1489 [receiveISR.asm 36]: WARNING --- Pipeline stall reading register written in previous instruction (Y data move field)
1489      P:00018D 5F7000            move                          b,y:lastmin
                   000403
1490   
1491      P:00018F 4EF000  nodecrece move                          y:innote,y0
                   000405
1492      P:000191 5FF000            move                          y:env2,b
                   000401
1493      P:000193 57F014            sub     b,a       x:denvt,b
                   000403
1494      P:000195 57F005            cmp     b,a       x:envt,b
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  receiveISR.asm  Page 9



                   000402
1495      P:000197 0D1049            blt     noonset
                   000022
1496      P:000199 0CC6A1            brset   #1,y0,yesonset
                   00000D
1497      P:00019B 5EF000            move                          y:env1,a
                   000400
1498      P:00019D 5FF005            cmp     b,a                   y:lastmin,b
                   000403
1499      P:00019F 0D1049            blt     noonset
                   00001A
1500      P:0001A1 57F014            sub     b,a       x:mint,b
                   000405
1501      P:0001A3 200005            cmp     b,a
1502      P:0001A4 0D1049            blt     noonset
                   000015
1503   
1504      P:0001A6 0A7061  yesonset  bset    #1,y:innote
                   000405
1505      P:0001A8 56F400            move              #0.999,a
                   7FDF3B
1506      P:0001AA 5E7000            move                          a,y:lastmin
                   000403
1507      P:0001AC 56F400            move              #N_IGNORE,a
                   0003E8
1508      P:0001AE 5E7000            move                          a,y:ignore
                   000404
1509                                                                           ;flags para main
1510      P:0001B0 56F400            move              #0.999,a                ;DEBUG
                   7FDF3B
1511      P:0001B2 0AF080            jmp     finiupi
                   0001CB
1512   
1513      P:0001B4 00000B  ignoring  dec     b
**** 1514 [receiveISR.asm 61]: WARNING --- Pipeline stall reading register written in previous instruction (Y data move field)
1514      P:0001B5 5F7000            move                          b,y:ignore
                   000404
1515      P:0001B7 0D10C0            bra     noend
                   000013
1516      P:0001B9 4EF000  noonset   move                          y:innote,y0
                   000405
1517      P:0001BB 0CC681            brclr   #1,y0,noend
                   00000F
1518      P:0001BD 5EF000            move                          y:env1,a
                   000400
1519      P:0001BF 57F000            move              x:endt,b
                   000404
1520      P:0001C1 200005            cmp     b,a
1521      P:0001C2 0D1041            bge     noend
                   000008
1522      P:0001C4 0A7041  endnote   bclr    #1,y:innote
                   000405
1523      P:0001C6 46F400            move              #0.999,y0
                   7FDF3B
1524      P:0001C8 4E7000            move                          y0,y:lastmin
                   000403
Motorola DSP56300 Assembler  Version 6.2.0   111-03-05  13:24:53  receiveISR.asm  Page 10



1525      P:0001CA 2E0000  noend     move              #0,a                    ;DEBUG
1526   
1527                       ;FIN DE ONSET DETECTION
1528   
**** 1529 [receiveISR.asm 76]: WARNING --- Pipeline stall reading register written in previous instruction (X data move field)
1529      P:0001CB 21C400  finiupi   move              a,x0
1530      P:0001CC 0AF080            jmp     endisr
                   0001CF
1531   
1532                       ;KARPLUS
1533   
1534   
1535      P:0001CE 240000  esright   move              #0,x0                   ;mute the other channel
1536   
1537      P:0001CF 04C4DC  endisr    movep             x0,x:M_TX00             ; write d/a data
1538      P:0001D0 0B7000            bchg    #Left_ch,x:bits
                   000400
1539      P:0001D2 000004            rti
1540   
1541   
1542   
1543   
1544   
1545                       ;********************** SSI receive last slot ISR **************************
1546                       ssi_rxls_isr
1547   
1548   
1549      P:0001D3 000004            rti
1550   
1551                                 end

0    Errors
3    Warnings


